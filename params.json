{"name":"Pathshare SDK for iOS","tagline":"","body":"# Pathshare SDK for iOS\r\n\r\n**Pathshare** is a realtime location sharing platform. For more information please visit the [Pathshare Developer Page](https://pathsha.re/developers).\r\n\r\n- [Requirements](#requirement)\r\n- [Installation](#installation)\r\n- [Basic Usage](#basic-usage)\r\n  - [Initialize Pathshare](#init-pathshare)\r\n  - [Save Username](#save-username)\r\n  - [Create Session](#create-session)\r\n  - [Join Session](#join-session)\r\n  - [Leave Session](#leave-session)\r\n  - [Find Session](#find-session)\r\n\r\n\r\n## Requirements\r\n\r\nPathshareSDK for iOS supports iOS 8.x and iOS 9.x.\r\n\r\n## Installation\r\n\r\nThe installation of the **Pathshare SDK** is simple. Please follow the following steps:\r\n\r\n1. Drag and drop the `PathshareSDK.framework` you received upon registration into your project.\r\n2. Add the `PathshareSDK.framework` to the *Embedded Binaries* in the *general* tab of your target.\r\n3. Add the `NSLocationAlwaysUsageDescription` and the `NSMotionUsageDescription` keys with the corresponding descriptions to your `Info.plist` file.\r\n\r\n## Basic Usage\r\n\r\n### Initialization\r\n\r\nIn order to initialize the Pathshare SDK, create a file named `pathshare.plist` inside your project and add your account token:\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\r\n<plist version=\"1.0\">\r\n<dict>\r\n    <key>account_token</key>\r\n    <string>your PathshareSDK account token</string>\r\n</dict>\r\n</plist>\r\n\r\n```\r\n\r\nNext, add the following to the `application:didFinishLaunchingWithOptions:` method of your `AppDelegate` class:\r\n\r\n###### Objective-C\r\n```Objective-c\r\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\r\n{\r\n    [self initPathshare];\r\n    return YES;\r\n}\r\n\r\n...\r\n\r\n- (void)initPathshare\r\n{\r\n    NSString *pathshare = [NSBundle.mainBundle pathForResource:@\"pathshare\" ofType:@\"plist\"];\r\n    NSDictionary *config = [[NSDictionary alloc] initWithContentsOfFile:pathshare];\r\n\r\n    [Pathshare setAccountToken:config[@\"account_token\"]];\r\n}\r\n```\r\n###### Swift\r\n```swift\r\nfunc application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -> Bool {\r\n    initPathshare()\r\n    return true\r\n}\r\n\r\n...\r\n\r\nprivate func initPathshare() {\r\n    let pathshare = NSBundle.mainBundle().pathForResource(\"Pathshare\", ofType:\"plist\") as String!\r\n    let config = NSDictionary.init(contentsOfFile: pathshare) as NSDictionary!\r\n    Pathshare.setAccountToken(config!.valueForKey(\"account_token\") as! String)\r\n}\r\n```\r\n\r\n### Save Username\r\n\r\nBefore creating a session, you need to set a username:\r\n\r\n###### Objective-C\r\n```Objective-c\r\n[Pathshare saveUserName:@\"Candice\"\r\n      completionHandler:^(NSError *error) {\r\n          if (error) {\r\n              // ...\r\n          } else {\r\n              // ...\r\n          }\r\n      }\r\n ];\r\n```\r\n\r\n###### Swift\r\n```swift\r\nPathshare.saveUserName(\"SDK User ios\") { (error: NSError!) -> Void in\r\n    if error != nil {\r\n        // ...\r\n    } else {\r\n        // ...\r\n    }\r\n}\r\n```\r\n### Create Session\r\n\r\nUse the session initializer to create a session:\r\n\r\n###### Objective-C\r\n```objective-c\r\nSession *session = [[Session alloc] init];\r\nsession.expirationDate = expirationDate;\r\nsession.name = @\"Shopping\";\r\nsession.trackingMode = PSTrackingModeSmart;\r\n```\r\n\r\n###### Swift\r\n```swift\r\nvar session = Session.init()\r\nsession.expirationDate = expirationDate\r\nsession.name = \"Shopping\"\r\nsession.trackingMode = PSTrackingMode.Smart\r\n```\r\n\r\nA session must have an expiration date and a name. Optionally, you can specify a tracking mode to configure the behavior of the location tracker. The following tracking modes are available:\r\n\r\nTracking Mode      | Description\r\n-------------------|------------------------------------------------------------\r\n`PSTrackingModeSmart`            | Adapts intelligently to the environment and usage of the device. Includes awareness of battery level, travel speed and motion activity.\r\n`PSTrackingModeEco`              | Static mode providing constant tracking data with very low accuracy (several kilometers) and great distance between single locations and ensuring maximum battery life.\r\n`PSTrackingModeApproximate`      | Static mode providing constant tracking data with low accuracy (several hundred meters) and middle distance between single locations. Useful when a low battery drain is a important criteria.\r\n`PSTrackingModeAccurate`         | Static mode providing constant tracking with the highest accuracy possible (few meters) and small distances between locations. Useful for scenarios where a high accuracy is an essential requirement.\r\n\r\nMake sure to save the session after initializing:\r\n\r\n###### Objective-C\r\n```objective-c\r\n[session save:^(NSError *error) { ... }];\r\n\r\nsession.identifier // => 3fd919fe824d8e7b78e2c11c1570a6f168d2c...\r\n[session isExpired] // => false\r\n```\r\n\r\n###### Swift\r\n```swift\r\nsession.save { (error: NSError!) -> Void in ... }\r\n\r\nsession.identifier // => 3fd919fe824d8e7b78e2c11c1570a6f168d2c...\r\nsession.isExpired() // => false\r\n```\r\n\r\n#### Expiration\r\n\r\nIn order to react to the expiration of the session, implement the `SessionExpirationDelegate` protocol in your class:\r\n\r\n###### Objective-C\r\n```objective-c\r\n@interface ViewController : UIViewController <SessionExpirationDelegate>\r\n    // ...\r\n@end\r\n```\r\n\r\n###### Swift\r\n```swift\r\nclass ViewController: UIViewController, SessionExpirationDelegate { ... }\r\n```\r\n\r\nThen set the `delegate` on your session instance:\r\n\r\n###### Objective-C\r\n```objective-c\r\nSession *session = [[Session alloc] init];\r\nsession.delegate = self;\r\n```\r\n\r\n###### Swift\r\n```swift\r\nvar session = Session.init()\r\nsession.delegate = self\r\n```\r\n\r\nFinally, implement the `sessionDidExpire` method in your class to react to the expiration event:\r\n\r\n###### Objective-C\r\n```objective-c\r\n- (void)sessionDidExpire { ... }\r\n```\r\n\r\n###### Swift\r\n```swift\r\nfunc sessionDidExpire() { ... }\r\n```\r\n\r\n#### Destination\r\n\r\nOptionally, you can add a destination to the session. Sessions with destination will show the estimated time of arrival (ETA) for each user. The destination identifier is used to group sessions by destination.\r\n\r\n###### Objective-C\r\n```objective-c\r\nDestination *destination = [[Destination alloc] init];\r\ndestination.identifier = @\"W2342\";\r\ndestination.latitude = 47.378178;\r\ndestination.longitude = 8.539256;\r\n\r\nSession *session = [[Session alloc] init];\r\n//...\r\nsession.destination = destination;\r\n```\r\n\r\n###### Swift\r\n```swift\r\nvar destination = Destination.init()\r\ndestination.identifier = \"W2342\"\r\ndestination.latitude = 47.378178\r\ndestination.longitude = 8.539256\r\n\r\nvar session = Session.init()\r\n//...\r\nsession.destination = destination\r\n```\r\n\r\n### Join Session\r\n\r\nTo join the session you created, call the `joinUser:` method on the session object:\r\n\r\n###### Objective-C\r\n```objective-c\r\n[session joinUser:^(NSError *error) { ... }];\r\n\r\n[session isUserJoined] // => true\r\n```\r\n\r\n###### Swift\r\n```swift\r\nsession.joinUser { (error: NSError!) -> Void in ... }\r\n\r\nsession.isUserJoined() // => true\r\n```\r\n\r\nThis call will add your Pathshare user to the session and you will be able to see his location in realtime on a map in the Pathshare Professional web interface.\r\n\r\n### Leave Session\r\n\r\nIn order to stop sending user locations and remove the user from the session, call the `leaveUser:` method:\r\n\r\n###### Objective-C\r\n```objective-c\r\n[session leaveUser:^(NSError *error) { ... }];\r\n```\r\n\r\n###### Swift\r\n```swift\r\nsession.leaveUser { (error: NSError!) -> Void in ... }\r\n```\r\n\r\n### Find Session\r\n\r\nTo find an existing session, use the `findSessionWithIdentifier:completionHandler:` method with the corresponding session identifier:\r\n\r\n###### Objective-C\r\n```objective-c\r\n[Pathshare findSessionWithIdentifier:@\"e2e422\"\r\n                   completionHandler:^(Session *session, NSError *error) {\r\n                       if (session) {\r\n                           self.session = session;\r\n                       }\r\n                   }];\r\n```\r\n\r\n###### Swift\r\n```swift\r\nPathshare.findSessionWithIdentifier(\"e2e422\") { (session: Session!, error: NSError!) -> Void in\r\n    if session != nil {\r\n        self.session = session\r\n    }\r\n}\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}